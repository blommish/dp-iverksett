name: Build-Deploy dev
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment
        required: true
        default: dev
        options:
          - dev

env:
  IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  CI: true
  TZ: Europe/Oslo

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Read/save maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-cache-dp-iverksett-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-dp-iverksett-
            ${{ runner.os }}-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Bygg med Maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mvn -B --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker build --tag ${IMAGE} .
          docker push ${IMAGE}
  deploy-kontrakter:
    name: Deploy kontrakter til Github package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'
      - name: Setting version
        run: |
         export GIT_COMMIT_HASH=$(git log -n 1 --pretty=format:'%h')
         export GIT_COMMIT_DATE=$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')
         export VERSION=1.0_${GIT_COMMIT_DATE}_${GIT_COMMIT_HASH}
         echo "Setting version $VERSION"
         mvn versions:set -DnewVersion="$VERSION"
         mvn versions:commit
      - name: Deploy to Github Package
        env:
         GITHUB_USERNAME: x-access-token
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn --settings .m2/maven-settings.xml source:jar-no-fork deploy -DskipTests=true -Dmaven.wagon.http.pool=false

  deploy:
    name: Deploy til GCP
    timeout-minutes: 30
    needs: build
    #if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        timeout-minutes: 30
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .deploy/nais-preprod.yaml
